name: CD

on:
  workflow_dispatch:
    inputs:
      preid:
        description: "preid name(alpha, beta, rc, stable)"
        required: true
        default: "alpha"
      skip-version-rc:
        description: "release RC version just with lerna publish, skip run lerna version(yes or no)"
        required: false
        default: "no"
      pkgs:
        type: string
        required: false
        default: "template"
        description: "Please enter the package names you want to publish, such as cli, vscode, sdk, server and template. Please separate multiple entries with spaces"
  schedule:
    - cron: "0 8 * * *"

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      - name: Validate CD branch
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/heads/hotfix/') && github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/ga' }}
        run: |
          echo It's not allowed to run CD on other branch except main, dev and ga.
          exit 1

      - name: Validate inputs for main or hotfix
        if: ${{ github.event_name == 'workflow_dispatch' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')) && github.event.inputs.preid != 'rc' && github.event.inputs.preid != 'stable' }}
        run: |
          echo It's only allowed to release RC and stable on main branch.
          exit 1

      - name: Valiadte inputs for dev
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev' && github.event.inputs.preid != 'alpha' }}
        run: |
          echo It's only allowed to alpha on dev branch.
          exit 1

      - name: Validate inputs for ga
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/ga' && github.event.inputs.preid != 'beta' }}
        run: |
          echo It's only allowed to release beta on ga branch.
          exit 1

      - name: Validate schedule
        if: ${{ github.event_name == 'schedule' && github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/ga' }}
        run: |
          echo It's not allowed to run schedule release except dev or ga branch.
          exit 1

      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Install wine64
        run: |
          sudo apt update
          sudo apt install wine64 -y

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: manage pkgs to release
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pkgs }}
        run: bash .github/scripts/lerna.sh ${{github.event.inputs.pkgs}}

      - name: Setup project
        run: |
          npm run setup

      - name: Setup git
        run: |
          git config --global user.name 'hund030'
          git config --global user.email 'zhihuan@microsoft.com'

      - name: release alpha npm packages to npmjs.org
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          npx lerna version prerelease --preid=alpha.$(git rev-parse --short HEAD) --exact --no-push --allow-branch dev --yes

      - name: release beta npm packages to npmjs.org
        if: ${{ github.ref == 'refs/heads/ga' }}
        run: |
          npx lerna version prerelease --preid=beta.$(git rev-parse --short HEAD) --exact --no-push --allow-branch ga --yes

      - name: version rc npm packages to npmjs.org
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.preid == 'rc' && github.ref == 'refs/heads/main' && github.event.inputs.skip-version-rc == 'no'}}
        run: |
          npx lerna version --conventional-commits --conventional-prerelease --preid=rc --no-changelog --yes

      - name: version rc npm packages to npmjs.org on hotfix
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.preid == 'rc' && startsWith(github.ref, 'refs/heads/hotfix/') && github.event.inputs.skip-version-rc == 'no'}}
        run: |
          npx lerna version --conventional-commits --conventional-prerelease --preid=rc-hotfix --no-changelog --allow-branch ${GITHUB_REF#refs/*/} --yes

      - name: version stable npm packages to npmjs.org
        if: ${{ github.event_name == 'workflow_dispatch' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')) && github.event.inputs.preid == 'stable' }}
        run: |
          npx lerna version --conventional-commits --conventional-graduate --no-changelog --allow-branch ${GITHUB_REF#refs/*/} --yes

      - name: version change
        id: version-change
        run: |
          echo "::set-output name=CHANGED::$(git tag --points-at HEAD | xargs)"
          echo "::set-output name=TEMPLATE_VERSION::$(git tag --points-at HEAD | grep templates)"
          echo "::set-output name=EXTENSION_VERSION_NUM::$(git tag --points-at HEAD | grep ms-teams-vscode-extension@ | cut -d '@' -f2)"
          echo "::set-output name=EXTENSION_VERSION::$(git tag --points-at HEAD | grep ms-teams-vscode-extension@)"
          echo "::set-output name=SERVER_VERSION_NUM::$(git tag --points-at HEAD | grep @microsoft/teamsfx-server@ | cut -d '@' -f3)"
          echo "::set-output name=SERVER_VERSION::$(git tag --points-at HEAD| grep @microsoft/teamsfx-server@)"
          echo "::set-output name=SIMPLEAUTH_VERSION::$(git tag --points-at HEAD | grep simpleauth)"
          echo "::set-output name=SIMPLEAUTH_VERSION_NUM::$(git tag --points-at HEAD| grep simpleauth| cut -d '@' -f2)"
          if git tag --points-at HEAD | grep templates | grep rc;
          then
              git push -d origin $(git tag --points-at HEAD | grep templates | grep rc)
          fi

      - name: generate templates v3
        run: |
          .github/scripts/template-zip-autogen-v3.sh ${{ runner.temp }}/teamsfx_templates_v3

      - name: update templates alpha tag
        uses: richardsimko/update-tag@v1
        if: ${{ contains(steps.version-change.outputs.CHANGED, 'templates@') && github.ref == 'refs/heads/dev' }}
        with:
          tag_name: "templates-0.0.0-alpha"
        env:
          GITHUB_TOKEN: ${{ secrets.CD_PAT }}

      - name: update templates beta tag
        uses: richardsimko/update-tag@v1
        if: ${{ contains(steps.version-change.outputs.CHANGED, 'templates@') && github.ref == 'refs/heads/ga' }}
        with:
          tag_name: "templates-0.0.0-beta"
        env:
          GITHUB_TOKEN: ${{ secrets.CD_PAT }}

      - name: release templates' alpha version to github
        if: ${{ contains(steps.version-change.outputs.CHANGED, 'templates@') && github.ref == 'refs/heads/dev' }}
        uses: ncipollo/release-action@v1.10.0
        with:
          token: ${{ secrets.CD_PAT }}
          prerelease: true
          tag: "templates-0.0.0-alpha"
          artifacts: ${{ runner.temp }}/teamsfx_templates_v3/*.zip
          allowUpdates: true
          removeArtifacts: true

      - name: Generate Tag List
        run: git tag | grep templates > ${{ runner.temp }}/template-tags.txt

      - name: Update Template Tag list Release
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: ${{ runner.temp }}/template-tags.txt
          name: "Template Tag List"
          body: "Release to maintain template tag list."
          token: ${{ secrets.github_token }}
          tag: "template-tag-list"
          allowUpdates: true
